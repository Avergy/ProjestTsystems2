<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                 http://www.springframework.org/schema/security
                 http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http auto-config="true" use-expressions="true">

        <access-denied-handler error-page="/WEB-INF/views/error/accessError.jsp"/>

        <form-login login-page="/login"
                    username-parameter="j_username"
                    password-parameter="j_password"
                    login-processing-url="/static/j_spring_security_check"
                    default-target-url="/user/account"
                    authentication-failure-url="/login?error=true"/>

        <logout logout-url="/j_spring_security_logout" logout-success-url="/login"/>

        <anonymous username="Guest" granted-authority="anonymous"/>

        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/user/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_CLIENT')" />
    </http>

    <authentication-manager>
        <authentication-provider>

            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query=
                                       "SELECT Login, Password, TRUE as enabled FROM user WHERE Login=?"
                               authorities-by-username-query=
                                       "SELECT u.login, r.Role AS role_name FROM user u INNER JOIN role r
                                        ON u.idRole = r.id WHERE Login=?" />

        </authentication-provider>

    </authentication-manager>

</beans:beans>